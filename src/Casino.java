/* ==================================================================
*
*   PROGRAM NAME:
*       Assign2 - Casino Slot Machine
*
*   Description:
*	Program will loop, asking the user for a bet amount from 0 to 100
*       (assume dollars, you can use ints or longs).  If the user types a 0
*       that means the player wants to quit.  Otherwise, accept the amount
*       as the player's bet and simulate a slot machine pull.  The program
*       will print out a line that looks like a slot machine result
*       containing three strings.
*
*       - Each of the three positions in the string could be one of the
*           following:  "BAR", "7", "cherries" or "space". 
*       - Each of the three output positions must be generated by your program
*           randomly with probabilities:
*           ~ BAR       1/2 (50%)
*           ~ cherries  1/4 (25%)
*           ~ space     1/8 (12.5%)
*           ~ 7         1/8 (12.5%)
*           ~ Therefore, BAR should be the most frequent symbol seen and space
*               or 7 the least frequent.
*       - The following combinations should pay the bet as shown (note ORDER
*           MATTERS):
*           ~ cherries  [not cherries]  [any] pays 5 × bet (5 times the bet)
*           ~ cherries  cherries  [not cherries] pays 15 × bet
*           ~ cherries  cherries  cherries pays 30 × bet
*           ~ BAR  BAR  BARpays 50 × bet
*           ~ 7  7  7 pays 100 × bet
*       - After the pull, display the three strings regardless of the outcome.
*           If the user did not win, tell him/her "Sorry, you lose.".  If
*           the player won, pay him by displaying his winnings (his original
*           bet times the winning factor from the above table).  Then, repeat
*           the whole process by requesting another bet amount.
*
*   Classes:
*       Casino, TripleString
*
*   Parameters:
*       1. none
*
*   Additional Files:
*
*   Created:
*       2017/01/17
*
*   Author/s:
*       Roderick Burkhardt, Oswaldo Minez, Faiga Revah
*
* ==================================================================*/

import java.lang.Math;
import java.util.Scanner;

public class Casino
{

    public static void main(String argsp[])
    {
        TripleString currentPlay = new TripleString();
        int playerBet = 0;
        int winnings = 0;
        
        System.out.println("Casino - Slot Machine");
        
        do // processes atleast once, exiting when the player bets 0
        {
                playerBet = getBet();           
            
            // checks if did not enter 0 and starts play
            if ( !(playerBet == 0) ) 
            {
                currentPlay = pull();
                winnings = getPayMultiplier(currentPlay) * playerBet;
                currentPlay.saveWinnings(winnings);
                display(currentPlay, winnings);
                System.out.println("");
            }
            // if player enters 0, message and winnings are displayed
            // and loop ended  quiting the application
            else
            {
                System.out.println("Thank you for playing!");
                System.out.println(currentPlay.displayWinnings());
            }
            
        } while ( !(playerBet == 0) );
    }
    
    //asks the user for an input value between 0 and 100
    //returns the bet as an int after checking input
    static int getBet()
    {
        int bet = -1;
        Scanner input = new Scanner(System.in);

        while (bet < 0 || bet > 100)
        {
            System.out.print("How much would you like to bet (1-100) or 0 to quit: ");
            bet = input.nextInt();
        }
        return bet;
    }

    //generates random string based on probabilities
    //50% chance of Bar
    //25% chance of cherries
    //12.5% chance each for 7 and space
    private static String randString()
    {
        double randBet = Math.random();
        if (randBet >= 0 && randBet < 0.5)
            return "BAR";
        else if (randBet >= 0.5 && randBet < 0.750)
            return "CHERRIES";
        else if (randBet >= 0.750 && randBet < 0.875)
            return "7";
        return "SPACE";
    }
    
    //method display() displays the TripleString of randomly generated strings
    //along with the winnings
    //outputs to the console
    public static void display(TripleString thePull, int winnings)
    {
        System.out.println("Whirr...and your pull is ...");
        System.out.println(thePull.toString());
        if (winnings > 0)
            System.out.println("Congratulations, you win " + winnings);
        else
            System.out.println("Sorry, you lose.");
    }
    
    // method getPayMultiplier() takes TripleString thePull
    // thePull allow access the Objects 3 string for checking for
    // player's win or lose. The method than returns the multiplier by
    // the playerBet will be multiplied by.
    public static int getPayMultiplier(TripleString thePull)
    {
        String str1 = thePull.getString1();
        String str2 = thePull.getString2();
        String str3 = thePull.getString3();
        
        if (str1.equals("7") && str2.equals("7") && str3.equals("7"))
            return 100;
        else if (str1.equals("BAR") && str2.equals("BAR") && str3.equals("BAR"))
            return 50;
        else if (str1.equals("CHERRIES") && str2.equals("CHERRIES") &&
                str3.equals("CHERRIES"))
            return 30;
        else if (str1.equals("CHERRIES") && str2.equals("CHERRIES") &&
                !str3.equals("CHERRIES"))
            return 15;
        else if (str1.equals("CHERRIES") && !str2.equals("CHERRIES"))
            return 5;
        else
            return 0;
    }
    
    // pull() method is used to fill the strings of the currentPlay 
    // TripleString object by creating a temporary TripleString object
    // which it than fill the private string variables of using 
    // the helper method randString(). After having filled the private
    // string variables, the temporary TripleString object is returned.
    public static TripleString pull()
    {
        TripleString retVal = new TripleString();
        retVal.setString1(randString());
        retVal.setString2(randString());
        retVal.setString3(randString());
        return retVal;
    }

}

/*class TripleString // Oswaldo Minez
{

    private String String1;
    private String String2;
    private String String3;
    public final static int MAX_LEN = 20;
    public final static int MAX_PULLS = 40;
    private final int[] pullWinnings = new int[MAX_PULLS];
    private int numPulls;

    // Method TripleString() that holds all the strings
    public void TripleString()
    {
        String1 = "";
        String2 = "";
        String3 = "";
    }

    // Method used to check whether if String str is legal or not
    boolean validString(String str)
    {
        if (str != null && str.length() <= MAX_LEN)
        {
            return false;
        }
        else
        {
            return true;
        }
    }

    // toString method that concatenates all the Strings into one
    public String toString()
    {
        String togetherString = String1 + "" + String2 + "" + String3;
        return togetherString;
    }

    // boolean saveWinnings method to save the winnings
    public boolean saveWinnings(int winnings)
    {
        if (numPulls <= MAX_PULLS)
        {
            pullWinnings[numPulls - 1] = winnings;
            return true;
        }
        return false;
    }

    // String displayWinnings() loops through pullWinnings array to print 
    // and returns the info as a String
    public String displayWinnings()
    {
        String retVal = "";
        int total = 0;
        
        for (int x = 0; x < pullWinnings.length; x++)
        {
            retVal += String.format("%8s\n", pullWinnings[x]);
            total += pullWinnings[x];
        }
        retVal += "====\n";
        retVal += total + "Total Winnings";

        return retVal;
    }

}*/


class TripleString // Faiga Revah
{

    private String string1;
    private String string2;
    private String string3;

    public static final int MAX_LEN = 20;
    public static final int MAX_PULLS = 40;

    private static int pullWinnings[] = new int[MAX_PULLS];

    private static int numPulls = 0;

    // Method TripleString() that initiates all the strings
    public TripleString()
    {
        string1 = string2 = string3 = "";
    }
    
    // Method used to check whether if String str is legal or not
    public boolean validString(String str)
    {
        if (str != null && str.length() <= MAX_LEN)
        {
            return true;
        }
        return false;
    }
    
    // Checks whether String1 is valid using validString()
    // Sets string1 if input is valid
    public boolean setString1(String str)
    {
        if (validString(str))
        {
            string1 = str;
            return true;
        }
        return false;
    }

    // Checks whether String2 is valid using validString()
    // Sets string2 if input is valid
    public boolean setString2(String str)
    {
        if (validString(str))
        {
            string2 = str;
            return true;
        }
        return false;
    }

    // Checks whether String3 is valid using validString()
    // Sets string3 if input is valid
    public boolean setString3(String str)
    {
        if (validString(str))
        {
            string3 = str;
            return true;
        }
        return false;
    }

    // getter method to return string1
    public String getString1()
    {
        return string1;
    }

    // getter method to return string2
    public String getString2()
    {
        return string2;
    }

    // getter method to return string3
    public String getString3()
    {
        return string3;
    }

    // toString method that concatenates all the Strings into one
    public String toString()
    {
        return string1 + " " + string2 + " " + string3;
    }

    // boolean saveWinnings method to save the winnings
    public boolean saveWinnings(int winnings)
    {
        if (numPulls <= MAX_PULLS)
        {
            pullWinnings[numPulls] = winnings;
            numPulls++;
            return true;
        }
        return false;
    }

    // String displayWinnings() loops through pullWinnings array to print
    // and returns the info as a String
    // also returns the total winnings
    public String displayWinnings()
    {
        String winnings = new String();
        int total = 0;
        winnings += "Your individual winnings were:\n";
        for(int i = 0; i < numPulls; i++)
        {
            winnings += pullWinnings[i] + " ";
            total += pullWinnings[i];
        }
        winnings += "\nYour total winnings were: " + total;
        return winnings;
    }

}
